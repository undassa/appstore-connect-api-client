/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect

import (
	"encoding/json"
)

// ErrorResponseErrors struct for ErrorResponseErrors
type ErrorResponseErrors struct {
	Id *string `json:"id,omitempty"`
	Status string `json:"status"`
	Code string `json:"code"`
	Title string `json:"title"`
	Detail string `json:"detail"`
	Source *OneOfobjectobject `json:"source,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ErrorResponseErrors ErrorResponseErrors

// NewErrorResponseErrors instantiates a new ErrorResponseErrors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorResponseErrors(status string, code string, title string, detail string, ) *ErrorResponseErrors {
	this := ErrorResponseErrors{}
	this.Status = status
	this.Code = code
	this.Title = title
	this.Detail = detail
	return &this
}

// NewErrorResponseErrorsWithDefaults instantiates a new ErrorResponseErrors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorResponseErrorsWithDefaults() *ErrorResponseErrors {
	this := ErrorResponseErrors{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ErrorResponseErrors) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponseErrors) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ErrorResponseErrors) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ErrorResponseErrors) SetId(v string) {
	o.Id = &v
}

// GetStatus returns the Status field value
func (o *ErrorResponseErrors) GetStatus() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ErrorResponseErrors) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ErrorResponseErrors) SetStatus(v string) {
	o.Status = v
}

// GetCode returns the Code field value
func (o *ErrorResponseErrors) GetCode() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *ErrorResponseErrors) GetCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *ErrorResponseErrors) SetCode(v string) {
	o.Code = v
}

// GetTitle returns the Title field value
func (o *ErrorResponseErrors) GetTitle() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ErrorResponseErrors) GetTitleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ErrorResponseErrors) SetTitle(v string) {
	o.Title = v
}

// GetDetail returns the Detail field value
func (o *ErrorResponseErrors) GetDetail() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Detail
}

// GetDetailOk returns a tuple with the Detail field value
// and a boolean to check if the value has been set.
func (o *ErrorResponseErrors) GetDetailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Detail, true
}

// SetDetail sets field value
func (o *ErrorResponseErrors) SetDetail(v string) {
	o.Detail = v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *ErrorResponseErrors) GetSource() OneOfobjectobject {
	if o == nil || o.Source == nil {
		var ret OneOfobjectobject
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponseErrors) GetSourceOk() (*OneOfobjectobject, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *ErrorResponseErrors) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given OneOfobjectobject and assigns it to the Source field.
func (o *ErrorResponseErrors) SetSource(v OneOfobjectobject) {
	o.Source = &v
}

func (o ErrorResponseErrors) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["code"] = o.Code
	}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["detail"] = o.Detail
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ErrorResponseErrors) UnmarshalJSON(bytes []byte) (err error) {
	varErrorResponseErrors := _ErrorResponseErrors{}

	if err = json.Unmarshal(bytes, &varErrorResponseErrors); err == nil {
		*o = ErrorResponseErrors(varErrorResponseErrors)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "status")
		delete(additionalProperties, "code")
		delete(additionalProperties, "title")
		delete(additionalProperties, "detail")
		delete(additionalProperties, "source")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableErrorResponseErrors struct {
	value *ErrorResponseErrors
	isSet bool
}

func (v NullableErrorResponseErrors) Get() *ErrorResponseErrors {
	return v.value
}

func (v *NullableErrorResponseErrors) Set(val *ErrorResponseErrors) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorResponseErrors) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorResponseErrors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorResponseErrors(val *ErrorResponseErrors) *NullableErrorResponseErrors {
	return &NullableErrorResponseErrors{value: val, isSet: true}
}

func (v NullableErrorResponseErrors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorResponseErrors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


