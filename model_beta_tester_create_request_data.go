/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect

import (
	"encoding/json"
)

// BetaTesterCreateRequestData struct for BetaTesterCreateRequestData
type BetaTesterCreateRequestData struct {
	Type string `json:"type"`
	Attributes BetaTesterCreateRequestDataAttributes `json:"attributes"`
	Relationships *BetaTesterCreateRequestDataRelationships `json:"relationships,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BetaTesterCreateRequestData BetaTesterCreateRequestData

// NewBetaTesterCreateRequestData instantiates a new BetaTesterCreateRequestData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBetaTesterCreateRequestData(type_ string, attributes BetaTesterCreateRequestDataAttributes, ) *BetaTesterCreateRequestData {
	this := BetaTesterCreateRequestData{}
	this.Type = type_
	this.Attributes = attributes
	return &this
}

// NewBetaTesterCreateRequestDataWithDefaults instantiates a new BetaTesterCreateRequestData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBetaTesterCreateRequestDataWithDefaults() *BetaTesterCreateRequestData {
	this := BetaTesterCreateRequestData{}
	return &this
}

// GetType returns the Type field value
func (o *BetaTesterCreateRequestData) GetType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *BetaTesterCreateRequestData) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *BetaTesterCreateRequestData) SetType(v string) {
	o.Type = v
}

// GetAttributes returns the Attributes field value
func (o *BetaTesterCreateRequestData) GetAttributes() BetaTesterCreateRequestDataAttributes {
	if o == nil  {
		var ret BetaTesterCreateRequestDataAttributes
		return ret
	}

	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value
// and a boolean to check if the value has been set.
func (o *BetaTesterCreateRequestData) GetAttributesOk() (*BetaTesterCreateRequestDataAttributes, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Attributes, true
}

// SetAttributes sets field value
func (o *BetaTesterCreateRequestData) SetAttributes(v BetaTesterCreateRequestDataAttributes) {
	o.Attributes = v
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *BetaTesterCreateRequestData) GetRelationships() BetaTesterCreateRequestDataRelationships {
	if o == nil || o.Relationships == nil {
		var ret BetaTesterCreateRequestDataRelationships
		return ret
	}
	return *o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BetaTesterCreateRequestData) GetRelationshipsOk() (*BetaTesterCreateRequestDataRelationships, bool) {
	if o == nil || o.Relationships == nil {
		return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *BetaTesterCreateRequestData) HasRelationships() bool {
	if o != nil && o.Relationships != nil {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given BetaTesterCreateRequestDataRelationships and assigns it to the Relationships field.
func (o *BetaTesterCreateRequestData) SetRelationships(v BetaTesterCreateRequestDataRelationships) {
	o.Relationships = &v
}

func (o BetaTesterCreateRequestData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["attributes"] = o.Attributes
	}
	if o.Relationships != nil {
		toSerialize["relationships"] = o.Relationships
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *BetaTesterCreateRequestData) UnmarshalJSON(bytes []byte) (err error) {
	varBetaTesterCreateRequestData := _BetaTesterCreateRequestData{}

	if err = json.Unmarshal(bytes, &varBetaTesterCreateRequestData); err == nil {
		*o = BetaTesterCreateRequestData(varBetaTesterCreateRequestData)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "attributes")
		delete(additionalProperties, "relationships")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBetaTesterCreateRequestData struct {
	value *BetaTesterCreateRequestData
	isSet bool
}

func (v NullableBetaTesterCreateRequestData) Get() *BetaTesterCreateRequestData {
	return v.value
}

func (v *NullableBetaTesterCreateRequestData) Set(val *BetaTesterCreateRequestData) {
	v.value = val
	v.isSet = true
}

func (v NullableBetaTesterCreateRequestData) IsSet() bool {
	return v.isSet
}

func (v *NullableBetaTesterCreateRequestData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBetaTesterCreateRequestData(val *BetaTesterCreateRequestData) *NullableBetaTesterCreateRequestData {
	return &NullableBetaTesterCreateRequestData{value: val, isSet: true}
}

func (v NullableBetaTesterCreateRequestData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBetaTesterCreateRequestData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


