/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect

import (
	"encoding/json"
)

// BetaAppReviewSubmissionAttributes struct for BetaAppReviewSubmissionAttributes
type BetaAppReviewSubmissionAttributes struct {
	BetaReviewState *BetaReviewState `json:"betaReviewState,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BetaAppReviewSubmissionAttributes BetaAppReviewSubmissionAttributes

// NewBetaAppReviewSubmissionAttributes instantiates a new BetaAppReviewSubmissionAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBetaAppReviewSubmissionAttributes() *BetaAppReviewSubmissionAttributes {
	this := BetaAppReviewSubmissionAttributes{}
	return &this
}

// NewBetaAppReviewSubmissionAttributesWithDefaults instantiates a new BetaAppReviewSubmissionAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBetaAppReviewSubmissionAttributesWithDefaults() *BetaAppReviewSubmissionAttributes {
	this := BetaAppReviewSubmissionAttributes{}
	return &this
}

// GetBetaReviewState returns the BetaReviewState field value if set, zero value otherwise.
func (o *BetaAppReviewSubmissionAttributes) GetBetaReviewState() BetaReviewState {
	if o == nil || o.BetaReviewState == nil {
		var ret BetaReviewState
		return ret
	}
	return *o.BetaReviewState
}

// GetBetaReviewStateOk returns a tuple with the BetaReviewState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BetaAppReviewSubmissionAttributes) GetBetaReviewStateOk() (*BetaReviewState, bool) {
	if o == nil || o.BetaReviewState == nil {
		return nil, false
	}
	return o.BetaReviewState, true
}

// HasBetaReviewState returns a boolean if a field has been set.
func (o *BetaAppReviewSubmissionAttributes) HasBetaReviewState() bool {
	if o != nil && o.BetaReviewState != nil {
		return true
	}

	return false
}

// SetBetaReviewState gets a reference to the given BetaReviewState and assigns it to the BetaReviewState field.
func (o *BetaAppReviewSubmissionAttributes) SetBetaReviewState(v BetaReviewState) {
	o.BetaReviewState = &v
}

func (o BetaAppReviewSubmissionAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BetaReviewState != nil {
		toSerialize["betaReviewState"] = o.BetaReviewState
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *BetaAppReviewSubmissionAttributes) UnmarshalJSON(bytes []byte) (err error) {
	varBetaAppReviewSubmissionAttributes := _BetaAppReviewSubmissionAttributes{}

	if err = json.Unmarshal(bytes, &varBetaAppReviewSubmissionAttributes); err == nil {
		*o = BetaAppReviewSubmissionAttributes(varBetaAppReviewSubmissionAttributes)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "betaReviewState")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBetaAppReviewSubmissionAttributes struct {
	value *BetaAppReviewSubmissionAttributes
	isSet bool
}

func (v NullableBetaAppReviewSubmissionAttributes) Get() *BetaAppReviewSubmissionAttributes {
	return v.value
}

func (v *NullableBetaAppReviewSubmissionAttributes) Set(val *BetaAppReviewSubmissionAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableBetaAppReviewSubmissionAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableBetaAppReviewSubmissionAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBetaAppReviewSubmissionAttributes(val *BetaAppReviewSubmissionAttributes) *NullableBetaAppReviewSubmissionAttributes {
	return &NullableBetaAppReviewSubmissionAttributes{value: val, isSet: true}
}

func (v NullableBetaAppReviewSubmissionAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBetaAppReviewSubmissionAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


