/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect

import (
	"encoding/json"
)

// AppRelationshipsBetaAppReviewDetail struct for AppRelationshipsBetaAppReviewDetail
type AppRelationshipsBetaAppReviewDetail struct {
	Links *AppCategoryRelationshipsSubcategoriesLinks `json:"links,omitempty"`
	Data *AppRelationshipsBetaAppReviewDetailData `json:"data,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AppRelationshipsBetaAppReviewDetail AppRelationshipsBetaAppReviewDetail

// NewAppRelationshipsBetaAppReviewDetail instantiates a new AppRelationshipsBetaAppReviewDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppRelationshipsBetaAppReviewDetail() *AppRelationshipsBetaAppReviewDetail {
	this := AppRelationshipsBetaAppReviewDetail{}
	return &this
}

// NewAppRelationshipsBetaAppReviewDetailWithDefaults instantiates a new AppRelationshipsBetaAppReviewDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRelationshipsBetaAppReviewDetailWithDefaults() *AppRelationshipsBetaAppReviewDetail {
	this := AppRelationshipsBetaAppReviewDetail{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *AppRelationshipsBetaAppReviewDetail) GetLinks() AppCategoryRelationshipsSubcategoriesLinks {
	if o == nil || o.Links == nil {
		var ret AppCategoryRelationshipsSubcategoriesLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppRelationshipsBetaAppReviewDetail) GetLinksOk() (*AppCategoryRelationshipsSubcategoriesLinks, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *AppRelationshipsBetaAppReviewDetail) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given AppCategoryRelationshipsSubcategoriesLinks and assigns it to the Links field.
func (o *AppRelationshipsBetaAppReviewDetail) SetLinks(v AppCategoryRelationshipsSubcategoriesLinks) {
	o.Links = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *AppRelationshipsBetaAppReviewDetail) GetData() AppRelationshipsBetaAppReviewDetailData {
	if o == nil || o.Data == nil {
		var ret AppRelationshipsBetaAppReviewDetailData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppRelationshipsBetaAppReviewDetail) GetDataOk() (*AppRelationshipsBetaAppReviewDetailData, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *AppRelationshipsBetaAppReviewDetail) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given AppRelationshipsBetaAppReviewDetailData and assigns it to the Data field.
func (o *AppRelationshipsBetaAppReviewDetail) SetData(v AppRelationshipsBetaAppReviewDetailData) {
	o.Data = &v
}

func (o AppRelationshipsBetaAppReviewDetail) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *AppRelationshipsBetaAppReviewDetail) UnmarshalJSON(bytes []byte) (err error) {
	varAppRelationshipsBetaAppReviewDetail := _AppRelationshipsBetaAppReviewDetail{}

	if err = json.Unmarshal(bytes, &varAppRelationshipsBetaAppReviewDetail); err == nil {
		*o = AppRelationshipsBetaAppReviewDetail(varAppRelationshipsBetaAppReviewDetail)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "links")
		delete(additionalProperties, "data")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAppRelationshipsBetaAppReviewDetail struct {
	value *AppRelationshipsBetaAppReviewDetail
	isSet bool
}

func (v NullableAppRelationshipsBetaAppReviewDetail) Get() *AppRelationshipsBetaAppReviewDetail {
	return v.value
}

func (v *NullableAppRelationshipsBetaAppReviewDetail) Set(val *AppRelationshipsBetaAppReviewDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableAppRelationshipsBetaAppReviewDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableAppRelationshipsBetaAppReviewDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppRelationshipsBetaAppReviewDetail(val *AppRelationshipsBetaAppReviewDetail) *NullableAppRelationshipsBetaAppReviewDetail {
	return &NullableAppRelationshipsBetaAppReviewDetail{value: val, isSet: true}
}

func (v NullableAppRelationshipsBetaAppReviewDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppRelationshipsBetaAppReviewDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


