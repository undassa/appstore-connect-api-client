/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect

import (
	"encoding/json"
)

// BuildUpdateRequestDataRelationships struct for BuildUpdateRequestDataRelationships
type BuildUpdateRequestDataRelationships struct {
	AppEncryptionDeclaration *BuildUpdateRequestDataRelationshipsAppEncryptionDeclaration `json:"appEncryptionDeclaration,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BuildUpdateRequestDataRelationships BuildUpdateRequestDataRelationships

// NewBuildUpdateRequestDataRelationships instantiates a new BuildUpdateRequestDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBuildUpdateRequestDataRelationships() *BuildUpdateRequestDataRelationships {
	this := BuildUpdateRequestDataRelationships{}
	return &this
}

// NewBuildUpdateRequestDataRelationshipsWithDefaults instantiates a new BuildUpdateRequestDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBuildUpdateRequestDataRelationshipsWithDefaults() *BuildUpdateRequestDataRelationships {
	this := BuildUpdateRequestDataRelationships{}
	return &this
}

// GetAppEncryptionDeclaration returns the AppEncryptionDeclaration field value if set, zero value otherwise.
func (o *BuildUpdateRequestDataRelationships) GetAppEncryptionDeclaration() BuildUpdateRequestDataRelationshipsAppEncryptionDeclaration {
	if o == nil || o.AppEncryptionDeclaration == nil {
		var ret BuildUpdateRequestDataRelationshipsAppEncryptionDeclaration
		return ret
	}
	return *o.AppEncryptionDeclaration
}

// GetAppEncryptionDeclarationOk returns a tuple with the AppEncryptionDeclaration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildUpdateRequestDataRelationships) GetAppEncryptionDeclarationOk() (*BuildUpdateRequestDataRelationshipsAppEncryptionDeclaration, bool) {
	if o == nil || o.AppEncryptionDeclaration == nil {
		return nil, false
	}
	return o.AppEncryptionDeclaration, true
}

// HasAppEncryptionDeclaration returns a boolean if a field has been set.
func (o *BuildUpdateRequestDataRelationships) HasAppEncryptionDeclaration() bool {
	if o != nil && o.AppEncryptionDeclaration != nil {
		return true
	}

	return false
}

// SetAppEncryptionDeclaration gets a reference to the given BuildUpdateRequestDataRelationshipsAppEncryptionDeclaration and assigns it to the AppEncryptionDeclaration field.
func (o *BuildUpdateRequestDataRelationships) SetAppEncryptionDeclaration(v BuildUpdateRequestDataRelationshipsAppEncryptionDeclaration) {
	o.AppEncryptionDeclaration = &v
}

func (o BuildUpdateRequestDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AppEncryptionDeclaration != nil {
		toSerialize["appEncryptionDeclaration"] = o.AppEncryptionDeclaration
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *BuildUpdateRequestDataRelationships) UnmarshalJSON(bytes []byte) (err error) {
	varBuildUpdateRequestDataRelationships := _BuildUpdateRequestDataRelationships{}

	if err = json.Unmarshal(bytes, &varBuildUpdateRequestDataRelationships); err == nil {
		*o = BuildUpdateRequestDataRelationships(varBuildUpdateRequestDataRelationships)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "appEncryptionDeclaration")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBuildUpdateRequestDataRelationships struct {
	value *BuildUpdateRequestDataRelationships
	isSet bool
}

func (v NullableBuildUpdateRequestDataRelationships) Get() *BuildUpdateRequestDataRelationships {
	return v.value
}

func (v *NullableBuildUpdateRequestDataRelationships) Set(val *BuildUpdateRequestDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableBuildUpdateRequestDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableBuildUpdateRequestDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBuildUpdateRequestDataRelationships(val *BuildUpdateRequestDataRelationships) *NullableBuildUpdateRequestDataRelationships {
	return &NullableBuildUpdateRequestDataRelationships{value: val, isSet: true}
}

func (v NullableBuildUpdateRequestDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBuildUpdateRequestDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


