/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect

import (
	"encoding/json"
)

// AppUpdateRequestDataAttributes struct for AppUpdateRequestDataAttributes
type AppUpdateRequestDataAttributes struct {
	BundleId *string `json:"bundleId,omitempty"`
	PrimaryLocale *string `json:"primaryLocale,omitempty"`
	AvailableInNewTerritories *bool `json:"availableInNewTerritories,omitempty"`
	ContentRightsDeclaration *string `json:"contentRightsDeclaration,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AppUpdateRequestDataAttributes AppUpdateRequestDataAttributes

// NewAppUpdateRequestDataAttributes instantiates a new AppUpdateRequestDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppUpdateRequestDataAttributes() *AppUpdateRequestDataAttributes {
	this := AppUpdateRequestDataAttributes{}
	return &this
}

// NewAppUpdateRequestDataAttributesWithDefaults instantiates a new AppUpdateRequestDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppUpdateRequestDataAttributesWithDefaults() *AppUpdateRequestDataAttributes {
	this := AppUpdateRequestDataAttributes{}
	return &this
}

// GetBundleId returns the BundleId field value if set, zero value otherwise.
func (o *AppUpdateRequestDataAttributes) GetBundleId() string {
	if o == nil || o.BundleId == nil {
		var ret string
		return ret
	}
	return *o.BundleId
}

// GetBundleIdOk returns a tuple with the BundleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppUpdateRequestDataAttributes) GetBundleIdOk() (*string, bool) {
	if o == nil || o.BundleId == nil {
		return nil, false
	}
	return o.BundleId, true
}

// HasBundleId returns a boolean if a field has been set.
func (o *AppUpdateRequestDataAttributes) HasBundleId() bool {
	if o != nil && o.BundleId != nil {
		return true
	}

	return false
}

// SetBundleId gets a reference to the given string and assigns it to the BundleId field.
func (o *AppUpdateRequestDataAttributes) SetBundleId(v string) {
	o.BundleId = &v
}

// GetPrimaryLocale returns the PrimaryLocale field value if set, zero value otherwise.
func (o *AppUpdateRequestDataAttributes) GetPrimaryLocale() string {
	if o == nil || o.PrimaryLocale == nil {
		var ret string
		return ret
	}
	return *o.PrimaryLocale
}

// GetPrimaryLocaleOk returns a tuple with the PrimaryLocale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppUpdateRequestDataAttributes) GetPrimaryLocaleOk() (*string, bool) {
	if o == nil || o.PrimaryLocale == nil {
		return nil, false
	}
	return o.PrimaryLocale, true
}

// HasPrimaryLocale returns a boolean if a field has been set.
func (o *AppUpdateRequestDataAttributes) HasPrimaryLocale() bool {
	if o != nil && o.PrimaryLocale != nil {
		return true
	}

	return false
}

// SetPrimaryLocale gets a reference to the given string and assigns it to the PrimaryLocale field.
func (o *AppUpdateRequestDataAttributes) SetPrimaryLocale(v string) {
	o.PrimaryLocale = &v
}

// GetAvailableInNewTerritories returns the AvailableInNewTerritories field value if set, zero value otherwise.
func (o *AppUpdateRequestDataAttributes) GetAvailableInNewTerritories() bool {
	if o == nil || o.AvailableInNewTerritories == nil {
		var ret bool
		return ret
	}
	return *o.AvailableInNewTerritories
}

// GetAvailableInNewTerritoriesOk returns a tuple with the AvailableInNewTerritories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppUpdateRequestDataAttributes) GetAvailableInNewTerritoriesOk() (*bool, bool) {
	if o == nil || o.AvailableInNewTerritories == nil {
		return nil, false
	}
	return o.AvailableInNewTerritories, true
}

// HasAvailableInNewTerritories returns a boolean if a field has been set.
func (o *AppUpdateRequestDataAttributes) HasAvailableInNewTerritories() bool {
	if o != nil && o.AvailableInNewTerritories != nil {
		return true
	}

	return false
}

// SetAvailableInNewTerritories gets a reference to the given bool and assigns it to the AvailableInNewTerritories field.
func (o *AppUpdateRequestDataAttributes) SetAvailableInNewTerritories(v bool) {
	o.AvailableInNewTerritories = &v
}

// GetContentRightsDeclaration returns the ContentRightsDeclaration field value if set, zero value otherwise.
func (o *AppUpdateRequestDataAttributes) GetContentRightsDeclaration() string {
	if o == nil || o.ContentRightsDeclaration == nil {
		var ret string
		return ret
	}
	return *o.ContentRightsDeclaration
}

// GetContentRightsDeclarationOk returns a tuple with the ContentRightsDeclaration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppUpdateRequestDataAttributes) GetContentRightsDeclarationOk() (*string, bool) {
	if o == nil || o.ContentRightsDeclaration == nil {
		return nil, false
	}
	return o.ContentRightsDeclaration, true
}

// HasContentRightsDeclaration returns a boolean if a field has been set.
func (o *AppUpdateRequestDataAttributes) HasContentRightsDeclaration() bool {
	if o != nil && o.ContentRightsDeclaration != nil {
		return true
	}

	return false
}

// SetContentRightsDeclaration gets a reference to the given string and assigns it to the ContentRightsDeclaration field.
func (o *AppUpdateRequestDataAttributes) SetContentRightsDeclaration(v string) {
	o.ContentRightsDeclaration = &v
}

func (o AppUpdateRequestDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BundleId != nil {
		toSerialize["bundleId"] = o.BundleId
	}
	if o.PrimaryLocale != nil {
		toSerialize["primaryLocale"] = o.PrimaryLocale
	}
	if o.AvailableInNewTerritories != nil {
		toSerialize["availableInNewTerritories"] = o.AvailableInNewTerritories
	}
	if o.ContentRightsDeclaration != nil {
		toSerialize["contentRightsDeclaration"] = o.ContentRightsDeclaration
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *AppUpdateRequestDataAttributes) UnmarshalJSON(bytes []byte) (err error) {
	varAppUpdateRequestDataAttributes := _AppUpdateRequestDataAttributes{}

	if err = json.Unmarshal(bytes, &varAppUpdateRequestDataAttributes); err == nil {
		*o = AppUpdateRequestDataAttributes(varAppUpdateRequestDataAttributes)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "bundleId")
		delete(additionalProperties, "primaryLocale")
		delete(additionalProperties, "availableInNewTerritories")
		delete(additionalProperties, "contentRightsDeclaration")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAppUpdateRequestDataAttributes struct {
	value *AppUpdateRequestDataAttributes
	isSet bool
}

func (v NullableAppUpdateRequestDataAttributes) Get() *AppUpdateRequestDataAttributes {
	return v.value
}

func (v *NullableAppUpdateRequestDataAttributes) Set(val *AppUpdateRequestDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableAppUpdateRequestDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableAppUpdateRequestDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppUpdateRequestDataAttributes(val *AppUpdateRequestDataAttributes) *NullableAppUpdateRequestDataAttributes {
	return &NullableAppUpdateRequestDataAttributes{value: val, isSet: true}
}

func (v NullableAppUpdateRequestDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppUpdateRequestDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


