/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect

import (
	"encoding/json"
)

// AppStoreVersionSubmissionRelationships struct for AppStoreVersionSubmissionRelationships
type AppStoreVersionSubmissionRelationships struct {
	AppStoreVersion *AppStoreReviewDetailRelationshipsAppStoreVersion `json:"appStoreVersion,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AppStoreVersionSubmissionRelationships AppStoreVersionSubmissionRelationships

// NewAppStoreVersionSubmissionRelationships instantiates a new AppStoreVersionSubmissionRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppStoreVersionSubmissionRelationships() *AppStoreVersionSubmissionRelationships {
	this := AppStoreVersionSubmissionRelationships{}
	return &this
}

// NewAppStoreVersionSubmissionRelationshipsWithDefaults instantiates a new AppStoreVersionSubmissionRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppStoreVersionSubmissionRelationshipsWithDefaults() *AppStoreVersionSubmissionRelationships {
	this := AppStoreVersionSubmissionRelationships{}
	return &this
}

// GetAppStoreVersion returns the AppStoreVersion field value if set, zero value otherwise.
func (o *AppStoreVersionSubmissionRelationships) GetAppStoreVersion() AppStoreReviewDetailRelationshipsAppStoreVersion {
	if o == nil || o.AppStoreVersion == nil {
		var ret AppStoreReviewDetailRelationshipsAppStoreVersion
		return ret
	}
	return *o.AppStoreVersion
}

// GetAppStoreVersionOk returns a tuple with the AppStoreVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStoreVersionSubmissionRelationships) GetAppStoreVersionOk() (*AppStoreReviewDetailRelationshipsAppStoreVersion, bool) {
	if o == nil || o.AppStoreVersion == nil {
		return nil, false
	}
	return o.AppStoreVersion, true
}

// HasAppStoreVersion returns a boolean if a field has been set.
func (o *AppStoreVersionSubmissionRelationships) HasAppStoreVersion() bool {
	if o != nil && o.AppStoreVersion != nil {
		return true
	}

	return false
}

// SetAppStoreVersion gets a reference to the given AppStoreReviewDetailRelationshipsAppStoreVersion and assigns it to the AppStoreVersion field.
func (o *AppStoreVersionSubmissionRelationships) SetAppStoreVersion(v AppStoreReviewDetailRelationshipsAppStoreVersion) {
	o.AppStoreVersion = &v
}

func (o AppStoreVersionSubmissionRelationships) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AppStoreVersion != nil {
		toSerialize["appStoreVersion"] = o.AppStoreVersion
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *AppStoreVersionSubmissionRelationships) UnmarshalJSON(bytes []byte) (err error) {
	varAppStoreVersionSubmissionRelationships := _AppStoreVersionSubmissionRelationships{}

	if err = json.Unmarshal(bytes, &varAppStoreVersionSubmissionRelationships); err == nil {
		*o = AppStoreVersionSubmissionRelationships(varAppStoreVersionSubmissionRelationships)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "appStoreVersion")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAppStoreVersionSubmissionRelationships struct {
	value *AppStoreVersionSubmissionRelationships
	isSet bool
}

func (v NullableAppStoreVersionSubmissionRelationships) Get() *AppStoreVersionSubmissionRelationships {
	return v.value
}

func (v *NullableAppStoreVersionSubmissionRelationships) Set(val *AppStoreVersionSubmissionRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableAppStoreVersionSubmissionRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableAppStoreVersionSubmissionRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppStoreVersionSubmissionRelationships(val *AppStoreVersionSubmissionRelationships) *NullableAppStoreVersionSubmissionRelationships {
	return &NullableAppStoreVersionSubmissionRelationships{value: val, isSet: true}
}

func (v NullableAppStoreVersionSubmissionRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppStoreVersionSubmissionRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


