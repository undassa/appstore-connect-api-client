/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect

import (
	"encoding/json"
)

// AppPreviewSetAttributes struct for AppPreviewSetAttributes
type AppPreviewSetAttributes struct {
	PreviewType *PreviewType `json:"previewType,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AppPreviewSetAttributes AppPreviewSetAttributes

// NewAppPreviewSetAttributes instantiates a new AppPreviewSetAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppPreviewSetAttributes() *AppPreviewSetAttributes {
	this := AppPreviewSetAttributes{}
	return &this
}

// NewAppPreviewSetAttributesWithDefaults instantiates a new AppPreviewSetAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppPreviewSetAttributesWithDefaults() *AppPreviewSetAttributes {
	this := AppPreviewSetAttributes{}
	return &this
}

// GetPreviewType returns the PreviewType field value if set, zero value otherwise.
func (o *AppPreviewSetAttributes) GetPreviewType() PreviewType {
	if o == nil || o.PreviewType == nil {
		var ret PreviewType
		return ret
	}
	return *o.PreviewType
}

// GetPreviewTypeOk returns a tuple with the PreviewType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPreviewSetAttributes) GetPreviewTypeOk() (*PreviewType, bool) {
	if o == nil || o.PreviewType == nil {
		return nil, false
	}
	return o.PreviewType, true
}

// HasPreviewType returns a boolean if a field has been set.
func (o *AppPreviewSetAttributes) HasPreviewType() bool {
	if o != nil && o.PreviewType != nil {
		return true
	}

	return false
}

// SetPreviewType gets a reference to the given PreviewType and assigns it to the PreviewType field.
func (o *AppPreviewSetAttributes) SetPreviewType(v PreviewType) {
	o.PreviewType = &v
}

func (o AppPreviewSetAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PreviewType != nil {
		toSerialize["previewType"] = o.PreviewType
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *AppPreviewSetAttributes) UnmarshalJSON(bytes []byte) (err error) {
	varAppPreviewSetAttributes := _AppPreviewSetAttributes{}

	if err = json.Unmarshal(bytes, &varAppPreviewSetAttributes); err == nil {
		*o = AppPreviewSetAttributes(varAppPreviewSetAttributes)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "previewType")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAppPreviewSetAttributes struct {
	value *AppPreviewSetAttributes
	isSet bool
}

func (v NullableAppPreviewSetAttributes) Get() *AppPreviewSetAttributes {
	return v.value
}

func (v *NullableAppPreviewSetAttributes) Set(val *AppPreviewSetAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableAppPreviewSetAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableAppPreviewSetAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppPreviewSetAttributes(val *AppPreviewSetAttributes) *NullableAppPreviewSetAttributes {
	return &NullableAppPreviewSetAttributes{value: val, isSet: true}
}

func (v NullableAppPreviewSetAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppPreviewSetAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


