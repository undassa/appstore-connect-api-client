/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect

import (
	"encoding/json"
	"fmt"
)

// ScreenshotDisplayType the model 'ScreenshotDisplayType'
type ScreenshotDisplayType string

// List of ScreenshotDisplayType
const (
	APP_IPHONE_65 ScreenshotDisplayType = "APP_IPHONE_65"
	APP_IPHONE_58 ScreenshotDisplayType = "APP_IPHONE_58"
	APP_IPHONE_55 ScreenshotDisplayType = "APP_IPHONE_55"
	APP_IPHONE_47 ScreenshotDisplayType = "APP_IPHONE_47"
	APP_IPHONE_40 ScreenshotDisplayType = "APP_IPHONE_40"
	APP_IPHONE_35 ScreenshotDisplayType = "APP_IPHONE_35"
	APP_IPAD_PRO_3_GEN_129 ScreenshotDisplayType = "APP_IPAD_PRO_3GEN_129"
	APP_IPAD_PRO_3_GEN_11 ScreenshotDisplayType = "APP_IPAD_PRO_3GEN_11"
	APP_IPAD_PRO_129 ScreenshotDisplayType = "APP_IPAD_PRO_129"
	APP_IPAD_105 ScreenshotDisplayType = "APP_IPAD_105"
	APP_IPAD_97 ScreenshotDisplayType = "APP_IPAD_97"
	APP_DESKTOP ScreenshotDisplayType = "APP_DESKTOP"
	APP_WATCH_SERIES_4 ScreenshotDisplayType = "APP_WATCH_SERIES_4"
	APP_WATCH_SERIES_3 ScreenshotDisplayType = "APP_WATCH_SERIES_3"
	APP_APPLE_TV ScreenshotDisplayType = "APP_APPLE_TV"
	IMESSAGE_APP_IPHONE_65 ScreenshotDisplayType = "IMESSAGE_APP_IPHONE_65"
	IMESSAGE_APP_IPHONE_58 ScreenshotDisplayType = "IMESSAGE_APP_IPHONE_58"
	IMESSAGE_APP_IPHONE_55 ScreenshotDisplayType = "IMESSAGE_APP_IPHONE_55"
	IMESSAGE_APP_IPHONE_47 ScreenshotDisplayType = "IMESSAGE_APP_IPHONE_47"
	IMESSAGE_APP_IPHONE_40 ScreenshotDisplayType = "IMESSAGE_APP_IPHONE_40"
	IMESSAGE_APP_IPAD_PRO_3_GEN_129 ScreenshotDisplayType = "IMESSAGE_APP_IPAD_PRO_3GEN_129"
	IMESSAGE_APP_IPAD_PRO_3_GEN_11 ScreenshotDisplayType = "IMESSAGE_APP_IPAD_PRO_3GEN_11"
	IMESSAGE_APP_IPAD_PRO_129 ScreenshotDisplayType = "IMESSAGE_APP_IPAD_PRO_129"
	IMESSAGE_APP_IPAD_105 ScreenshotDisplayType = "IMESSAGE_APP_IPAD_105"
	IMESSAGE_APP_IPAD_97 ScreenshotDisplayType = "IMESSAGE_APP_IPAD_97"
)

func (v *ScreenshotDisplayType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ScreenshotDisplayType(value)
	for _, existing := range []ScreenshotDisplayType{ "APP_IPHONE_65", "APP_IPHONE_58", "APP_IPHONE_55", "APP_IPHONE_47", "APP_IPHONE_40", "APP_IPHONE_35", "APP_IPAD_PRO_3GEN_129", "APP_IPAD_PRO_3GEN_11", "APP_IPAD_PRO_129", "APP_IPAD_105", "APP_IPAD_97", "APP_DESKTOP", "APP_WATCH_SERIES_4", "APP_WATCH_SERIES_3", "APP_APPLE_TV", "IMESSAGE_APP_IPHONE_65", "IMESSAGE_APP_IPHONE_58", "IMESSAGE_APP_IPHONE_55", "IMESSAGE_APP_IPHONE_47", "IMESSAGE_APP_IPHONE_40", "IMESSAGE_APP_IPAD_PRO_3GEN_129", "IMESSAGE_APP_IPAD_PRO_3GEN_11", "IMESSAGE_APP_IPAD_PRO_129", "IMESSAGE_APP_IPAD_105", "IMESSAGE_APP_IPAD_97",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ScreenshotDisplayType", value)
}

// Ptr returns reference to ScreenshotDisplayType value
func (v ScreenshotDisplayType) Ptr() *ScreenshotDisplayType {
	return &v
}

type NullableScreenshotDisplayType struct {
	value *ScreenshotDisplayType
	isSet bool
}

func (v NullableScreenshotDisplayType) Get() *ScreenshotDisplayType {
	return v.value
}

func (v *NullableScreenshotDisplayType) Set(val *ScreenshotDisplayType) {
	v.value = val
	v.isSet = true
}

func (v NullableScreenshotDisplayType) IsSet() bool {
	return v.isSet
}

func (v *NullableScreenshotDisplayType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScreenshotDisplayType(val *ScreenshotDisplayType) *NullableScreenshotDisplayType {
	return &NullableScreenshotDisplayType{value: val, isSet: true}
}

func (v NullableScreenshotDisplayType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScreenshotDisplayType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

