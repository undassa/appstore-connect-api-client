/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect

import (
	"encoding/json"
)

// AppStoreVersionLocalizationRelationshipsAppScreenshotSets struct for AppStoreVersionLocalizationRelationshipsAppScreenshotSets
type AppStoreVersionLocalizationRelationshipsAppScreenshotSets struct {
	Links *AppCategoryRelationshipsSubcategoriesLinks `json:"links,omitempty"`
	Meta *PagingInformation `json:"meta,omitempty"`
	Data *[]AppScreenshotRelationshipsAppScreenshotSetData `json:"data,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AppStoreVersionLocalizationRelationshipsAppScreenshotSets AppStoreVersionLocalizationRelationshipsAppScreenshotSets

// NewAppStoreVersionLocalizationRelationshipsAppScreenshotSets instantiates a new AppStoreVersionLocalizationRelationshipsAppScreenshotSets object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppStoreVersionLocalizationRelationshipsAppScreenshotSets() *AppStoreVersionLocalizationRelationshipsAppScreenshotSets {
	this := AppStoreVersionLocalizationRelationshipsAppScreenshotSets{}
	return &this
}

// NewAppStoreVersionLocalizationRelationshipsAppScreenshotSetsWithDefaults instantiates a new AppStoreVersionLocalizationRelationshipsAppScreenshotSets object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppStoreVersionLocalizationRelationshipsAppScreenshotSetsWithDefaults() *AppStoreVersionLocalizationRelationshipsAppScreenshotSets {
	this := AppStoreVersionLocalizationRelationshipsAppScreenshotSets{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *AppStoreVersionLocalizationRelationshipsAppScreenshotSets) GetLinks() AppCategoryRelationshipsSubcategoriesLinks {
	if o == nil || o.Links == nil {
		var ret AppCategoryRelationshipsSubcategoriesLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStoreVersionLocalizationRelationshipsAppScreenshotSets) GetLinksOk() (*AppCategoryRelationshipsSubcategoriesLinks, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *AppStoreVersionLocalizationRelationshipsAppScreenshotSets) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given AppCategoryRelationshipsSubcategoriesLinks and assigns it to the Links field.
func (o *AppStoreVersionLocalizationRelationshipsAppScreenshotSets) SetLinks(v AppCategoryRelationshipsSubcategoriesLinks) {
	o.Links = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *AppStoreVersionLocalizationRelationshipsAppScreenshotSets) GetMeta() PagingInformation {
	if o == nil || o.Meta == nil {
		var ret PagingInformation
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStoreVersionLocalizationRelationshipsAppScreenshotSets) GetMetaOk() (*PagingInformation, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *AppStoreVersionLocalizationRelationshipsAppScreenshotSets) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given PagingInformation and assigns it to the Meta field.
func (o *AppStoreVersionLocalizationRelationshipsAppScreenshotSets) SetMeta(v PagingInformation) {
	o.Meta = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *AppStoreVersionLocalizationRelationshipsAppScreenshotSets) GetData() []AppScreenshotRelationshipsAppScreenshotSetData {
	if o == nil || o.Data == nil {
		var ret []AppScreenshotRelationshipsAppScreenshotSetData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStoreVersionLocalizationRelationshipsAppScreenshotSets) GetDataOk() (*[]AppScreenshotRelationshipsAppScreenshotSetData, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *AppStoreVersionLocalizationRelationshipsAppScreenshotSets) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given []AppScreenshotRelationshipsAppScreenshotSetData and assigns it to the Data field.
func (o *AppStoreVersionLocalizationRelationshipsAppScreenshotSets) SetData(v []AppScreenshotRelationshipsAppScreenshotSetData) {
	o.Data = &v
}

func (o AppStoreVersionLocalizationRelationshipsAppScreenshotSets) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *AppStoreVersionLocalizationRelationshipsAppScreenshotSets) UnmarshalJSON(bytes []byte) (err error) {
	varAppStoreVersionLocalizationRelationshipsAppScreenshotSets := _AppStoreVersionLocalizationRelationshipsAppScreenshotSets{}

	if err = json.Unmarshal(bytes, &varAppStoreVersionLocalizationRelationshipsAppScreenshotSets); err == nil {
		*o = AppStoreVersionLocalizationRelationshipsAppScreenshotSets(varAppStoreVersionLocalizationRelationshipsAppScreenshotSets)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "links")
		delete(additionalProperties, "meta")
		delete(additionalProperties, "data")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAppStoreVersionLocalizationRelationshipsAppScreenshotSets struct {
	value *AppStoreVersionLocalizationRelationshipsAppScreenshotSets
	isSet bool
}

func (v NullableAppStoreVersionLocalizationRelationshipsAppScreenshotSets) Get() *AppStoreVersionLocalizationRelationshipsAppScreenshotSets {
	return v.value
}

func (v *NullableAppStoreVersionLocalizationRelationshipsAppScreenshotSets) Set(val *AppStoreVersionLocalizationRelationshipsAppScreenshotSets) {
	v.value = val
	v.isSet = true
}

func (v NullableAppStoreVersionLocalizationRelationshipsAppScreenshotSets) IsSet() bool {
	return v.isSet
}

func (v *NullableAppStoreVersionLocalizationRelationshipsAppScreenshotSets) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppStoreVersionLocalizationRelationshipsAppScreenshotSets(val *AppStoreVersionLocalizationRelationshipsAppScreenshotSets) *NullableAppStoreVersionLocalizationRelationshipsAppScreenshotSets {
	return &NullableAppStoreVersionLocalizationRelationshipsAppScreenshotSets{value: val, isSet: true}
}

func (v NullableAppStoreVersionLocalizationRelationshipsAppScreenshotSets) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppStoreVersionLocalizationRelationshipsAppScreenshotSets) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


