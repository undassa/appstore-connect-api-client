/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect

import (
	"encoding/json"
)

// DocumentLinks struct for DocumentLinks
type DocumentLinks struct {
	Self string `json:"self"`
	AdditionalProperties map[string]interface{}
}

type _DocumentLinks DocumentLinks

// NewDocumentLinks instantiates a new DocumentLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentLinks(self string, ) *DocumentLinks {
	this := DocumentLinks{}
	this.Self = self
	return &this
}

// NewDocumentLinksWithDefaults instantiates a new DocumentLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentLinksWithDefaults() *DocumentLinks {
	this := DocumentLinks{}
	return &this
}

// GetSelf returns the Self field value
func (o *DocumentLinks) GetSelf() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Self
}

// GetSelfOk returns a tuple with the Self field value
// and a boolean to check if the value has been set.
func (o *DocumentLinks) GetSelfOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Self, true
}

// SetSelf sets field value
func (o *DocumentLinks) SetSelf(v string) {
	o.Self = v
}

func (o DocumentLinks) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["self"] = o.Self
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *DocumentLinks) UnmarshalJSON(bytes []byte) (err error) {
	varDocumentLinks := _DocumentLinks{}

	if err = json.Unmarshal(bytes, &varDocumentLinks); err == nil {
		*o = DocumentLinks(varDocumentLinks)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "self")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDocumentLinks struct {
	value *DocumentLinks
	isSet bool
}

func (v NullableDocumentLinks) Get() *DocumentLinks {
	return v.value
}

func (v *NullableDocumentLinks) Set(val *DocumentLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentLinks(val *DocumentLinks) *NullableDocumentLinks {
	return &NullableDocumentLinks{value: val, isSet: true}
}

func (v NullableDocumentLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


