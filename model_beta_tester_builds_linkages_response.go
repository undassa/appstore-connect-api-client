/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect

import (
	"encoding/json"
)

// BetaTesterBuildsLinkagesResponse struct for BetaTesterBuildsLinkagesResponse
type BetaTesterBuildsLinkagesResponse struct {
	Data []AppStoreVersionRelationshipsBuildData `json:"data"`
	Links PagedDocumentLinks `json:"links"`
	Meta *PagingInformation `json:"meta,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BetaTesterBuildsLinkagesResponse BetaTesterBuildsLinkagesResponse

// NewBetaTesterBuildsLinkagesResponse instantiates a new BetaTesterBuildsLinkagesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBetaTesterBuildsLinkagesResponse(data []AppStoreVersionRelationshipsBuildData, links PagedDocumentLinks, ) *BetaTesterBuildsLinkagesResponse {
	this := BetaTesterBuildsLinkagesResponse{}
	this.Data = data
	this.Links = links
	return &this
}

// NewBetaTesterBuildsLinkagesResponseWithDefaults instantiates a new BetaTesterBuildsLinkagesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBetaTesterBuildsLinkagesResponseWithDefaults() *BetaTesterBuildsLinkagesResponse {
	this := BetaTesterBuildsLinkagesResponse{}
	return &this
}

// GetData returns the Data field value
func (o *BetaTesterBuildsLinkagesResponse) GetData() []AppStoreVersionRelationshipsBuildData {
	if o == nil  {
		var ret []AppStoreVersionRelationshipsBuildData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *BetaTesterBuildsLinkagesResponse) GetDataOk() (*[]AppStoreVersionRelationshipsBuildData, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *BetaTesterBuildsLinkagesResponse) SetData(v []AppStoreVersionRelationshipsBuildData) {
	o.Data = v
}

// GetLinks returns the Links field value
func (o *BetaTesterBuildsLinkagesResponse) GetLinks() PagedDocumentLinks {
	if o == nil  {
		var ret PagedDocumentLinks
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *BetaTesterBuildsLinkagesResponse) GetLinksOk() (*PagedDocumentLinks, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *BetaTesterBuildsLinkagesResponse) SetLinks(v PagedDocumentLinks) {
	o.Links = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *BetaTesterBuildsLinkagesResponse) GetMeta() PagingInformation {
	if o == nil || o.Meta == nil {
		var ret PagingInformation
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BetaTesterBuildsLinkagesResponse) GetMetaOk() (*PagingInformation, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *BetaTesterBuildsLinkagesResponse) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given PagingInformation and assigns it to the Meta field.
func (o *BetaTesterBuildsLinkagesResponse) SetMeta(v PagingInformation) {
	o.Meta = &v
}

func (o BetaTesterBuildsLinkagesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	if true {
		toSerialize["links"] = o.Links
	}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *BetaTesterBuildsLinkagesResponse) UnmarshalJSON(bytes []byte) (err error) {
	varBetaTesterBuildsLinkagesResponse := _BetaTesterBuildsLinkagesResponse{}

	if err = json.Unmarshal(bytes, &varBetaTesterBuildsLinkagesResponse); err == nil {
		*o = BetaTesterBuildsLinkagesResponse(varBetaTesterBuildsLinkagesResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "data")
		delete(additionalProperties, "links")
		delete(additionalProperties, "meta")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBetaTesterBuildsLinkagesResponse struct {
	value *BetaTesterBuildsLinkagesResponse
	isSet bool
}

func (v NullableBetaTesterBuildsLinkagesResponse) Get() *BetaTesterBuildsLinkagesResponse {
	return v.value
}

func (v *NullableBetaTesterBuildsLinkagesResponse) Set(val *BetaTesterBuildsLinkagesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBetaTesterBuildsLinkagesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBetaTesterBuildsLinkagesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBetaTesterBuildsLinkagesResponse(val *BetaTesterBuildsLinkagesResponse) *NullableBetaTesterBuildsLinkagesResponse {
	return &NullableBetaTesterBuildsLinkagesResponse{value: val, isSet: true}
}

func (v NullableBetaTesterBuildsLinkagesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBetaTesterBuildsLinkagesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


