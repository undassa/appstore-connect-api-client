/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect

import (
	"encoding/json"
)

// BetaAppLocalizationsResponse struct for BetaAppLocalizationsResponse
type BetaAppLocalizationsResponse struct {
	Data []BetaAppLocalization `json:"data"`
	Included *[]App `json:"included,omitempty"`
	Links PagedDocumentLinks `json:"links"`
	Meta *PagingInformation `json:"meta,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BetaAppLocalizationsResponse BetaAppLocalizationsResponse

// NewBetaAppLocalizationsResponse instantiates a new BetaAppLocalizationsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBetaAppLocalizationsResponse(data []BetaAppLocalization, links PagedDocumentLinks, ) *BetaAppLocalizationsResponse {
	this := BetaAppLocalizationsResponse{}
	this.Data = data
	this.Links = links
	return &this
}

// NewBetaAppLocalizationsResponseWithDefaults instantiates a new BetaAppLocalizationsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBetaAppLocalizationsResponseWithDefaults() *BetaAppLocalizationsResponse {
	this := BetaAppLocalizationsResponse{}
	return &this
}

// GetData returns the Data field value
func (o *BetaAppLocalizationsResponse) GetData() []BetaAppLocalization {
	if o == nil  {
		var ret []BetaAppLocalization
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *BetaAppLocalizationsResponse) GetDataOk() (*[]BetaAppLocalization, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *BetaAppLocalizationsResponse) SetData(v []BetaAppLocalization) {
	o.Data = v
}

// GetIncluded returns the Included field value if set, zero value otherwise.
func (o *BetaAppLocalizationsResponse) GetIncluded() []App {
	if o == nil || o.Included == nil {
		var ret []App
		return ret
	}
	return *o.Included
}

// GetIncludedOk returns a tuple with the Included field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BetaAppLocalizationsResponse) GetIncludedOk() (*[]App, bool) {
	if o == nil || o.Included == nil {
		return nil, false
	}
	return o.Included, true
}

// HasIncluded returns a boolean if a field has been set.
func (o *BetaAppLocalizationsResponse) HasIncluded() bool {
	if o != nil && o.Included != nil {
		return true
	}

	return false
}

// SetIncluded gets a reference to the given []App and assigns it to the Included field.
func (o *BetaAppLocalizationsResponse) SetIncluded(v []App) {
	o.Included = &v
}

// GetLinks returns the Links field value
func (o *BetaAppLocalizationsResponse) GetLinks() PagedDocumentLinks {
	if o == nil  {
		var ret PagedDocumentLinks
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *BetaAppLocalizationsResponse) GetLinksOk() (*PagedDocumentLinks, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *BetaAppLocalizationsResponse) SetLinks(v PagedDocumentLinks) {
	o.Links = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *BetaAppLocalizationsResponse) GetMeta() PagingInformation {
	if o == nil || o.Meta == nil {
		var ret PagingInformation
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BetaAppLocalizationsResponse) GetMetaOk() (*PagingInformation, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *BetaAppLocalizationsResponse) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given PagingInformation and assigns it to the Meta field.
func (o *BetaAppLocalizationsResponse) SetMeta(v PagingInformation) {
	o.Meta = &v
}

func (o BetaAppLocalizationsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	if o.Included != nil {
		toSerialize["included"] = o.Included
	}
	if true {
		toSerialize["links"] = o.Links
	}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *BetaAppLocalizationsResponse) UnmarshalJSON(bytes []byte) (err error) {
	varBetaAppLocalizationsResponse := _BetaAppLocalizationsResponse{}

	if err = json.Unmarshal(bytes, &varBetaAppLocalizationsResponse); err == nil {
		*o = BetaAppLocalizationsResponse(varBetaAppLocalizationsResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "data")
		delete(additionalProperties, "included")
		delete(additionalProperties, "links")
		delete(additionalProperties, "meta")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBetaAppLocalizationsResponse struct {
	value *BetaAppLocalizationsResponse
	isSet bool
}

func (v NullableBetaAppLocalizationsResponse) Get() *BetaAppLocalizationsResponse {
	return v.value
}

func (v *NullableBetaAppLocalizationsResponse) Set(val *BetaAppLocalizationsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBetaAppLocalizationsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBetaAppLocalizationsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBetaAppLocalizationsResponse(val *BetaAppLocalizationsResponse) *NullableBetaAppLocalizationsResponse {
	return &NullableBetaAppLocalizationsResponse{value: val, isSet: true}
}

func (v NullableBetaAppLocalizationsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBetaAppLocalizationsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


