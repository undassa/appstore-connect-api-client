/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect

import (
	"encoding/json"
)

// BetaGroupCreateRequestDataRelationshipsBuilds struct for BetaGroupCreateRequestDataRelationshipsBuilds
type BetaGroupCreateRequestDataRelationshipsBuilds struct {
	Data *[]AppStoreVersionRelationshipsBuildData `json:"data,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BetaGroupCreateRequestDataRelationshipsBuilds BetaGroupCreateRequestDataRelationshipsBuilds

// NewBetaGroupCreateRequestDataRelationshipsBuilds instantiates a new BetaGroupCreateRequestDataRelationshipsBuilds object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBetaGroupCreateRequestDataRelationshipsBuilds() *BetaGroupCreateRequestDataRelationshipsBuilds {
	this := BetaGroupCreateRequestDataRelationshipsBuilds{}
	return &this
}

// NewBetaGroupCreateRequestDataRelationshipsBuildsWithDefaults instantiates a new BetaGroupCreateRequestDataRelationshipsBuilds object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBetaGroupCreateRequestDataRelationshipsBuildsWithDefaults() *BetaGroupCreateRequestDataRelationshipsBuilds {
	this := BetaGroupCreateRequestDataRelationshipsBuilds{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *BetaGroupCreateRequestDataRelationshipsBuilds) GetData() []AppStoreVersionRelationshipsBuildData {
	if o == nil || o.Data == nil {
		var ret []AppStoreVersionRelationshipsBuildData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BetaGroupCreateRequestDataRelationshipsBuilds) GetDataOk() (*[]AppStoreVersionRelationshipsBuildData, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *BetaGroupCreateRequestDataRelationshipsBuilds) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given []AppStoreVersionRelationshipsBuildData and assigns it to the Data field.
func (o *BetaGroupCreateRequestDataRelationshipsBuilds) SetData(v []AppStoreVersionRelationshipsBuildData) {
	o.Data = &v
}

func (o BetaGroupCreateRequestDataRelationshipsBuilds) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *BetaGroupCreateRequestDataRelationshipsBuilds) UnmarshalJSON(bytes []byte) (err error) {
	varBetaGroupCreateRequestDataRelationshipsBuilds := _BetaGroupCreateRequestDataRelationshipsBuilds{}

	if err = json.Unmarshal(bytes, &varBetaGroupCreateRequestDataRelationshipsBuilds); err == nil {
		*o = BetaGroupCreateRequestDataRelationshipsBuilds(varBetaGroupCreateRequestDataRelationshipsBuilds)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "data")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBetaGroupCreateRequestDataRelationshipsBuilds struct {
	value *BetaGroupCreateRequestDataRelationshipsBuilds
	isSet bool
}

func (v NullableBetaGroupCreateRequestDataRelationshipsBuilds) Get() *BetaGroupCreateRequestDataRelationshipsBuilds {
	return v.value
}

func (v *NullableBetaGroupCreateRequestDataRelationshipsBuilds) Set(val *BetaGroupCreateRequestDataRelationshipsBuilds) {
	v.value = val
	v.isSet = true
}

func (v NullableBetaGroupCreateRequestDataRelationshipsBuilds) IsSet() bool {
	return v.isSet
}

func (v *NullableBetaGroupCreateRequestDataRelationshipsBuilds) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBetaGroupCreateRequestDataRelationshipsBuilds(val *BetaGroupCreateRequestDataRelationshipsBuilds) *NullableBetaGroupCreateRequestDataRelationshipsBuilds {
	return &NullableBetaGroupCreateRequestDataRelationshipsBuilds{value: val, isSet: true}
}

func (v NullableBetaGroupCreateRequestDataRelationshipsBuilds) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBetaGroupCreateRequestDataRelationshipsBuilds) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


