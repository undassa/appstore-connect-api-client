/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect

import (
	"encoding/json"
)

// UserInvitationRelationships struct for UserInvitationRelationships
type UserInvitationRelationships struct {
	VisibleApps *BetaTesterRelationshipsApps `json:"visibleApps,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UserInvitationRelationships UserInvitationRelationships

// NewUserInvitationRelationships instantiates a new UserInvitationRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserInvitationRelationships() *UserInvitationRelationships {
	this := UserInvitationRelationships{}
	return &this
}

// NewUserInvitationRelationshipsWithDefaults instantiates a new UserInvitationRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserInvitationRelationshipsWithDefaults() *UserInvitationRelationships {
	this := UserInvitationRelationships{}
	return &this
}

// GetVisibleApps returns the VisibleApps field value if set, zero value otherwise.
func (o *UserInvitationRelationships) GetVisibleApps() BetaTesterRelationshipsApps {
	if o == nil || o.VisibleApps == nil {
		var ret BetaTesterRelationshipsApps
		return ret
	}
	return *o.VisibleApps
}

// GetVisibleAppsOk returns a tuple with the VisibleApps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInvitationRelationships) GetVisibleAppsOk() (*BetaTesterRelationshipsApps, bool) {
	if o == nil || o.VisibleApps == nil {
		return nil, false
	}
	return o.VisibleApps, true
}

// HasVisibleApps returns a boolean if a field has been set.
func (o *UserInvitationRelationships) HasVisibleApps() bool {
	if o != nil && o.VisibleApps != nil {
		return true
	}

	return false
}

// SetVisibleApps gets a reference to the given BetaTesterRelationshipsApps and assigns it to the VisibleApps field.
func (o *UserInvitationRelationships) SetVisibleApps(v BetaTesterRelationshipsApps) {
	o.VisibleApps = &v
}

func (o UserInvitationRelationships) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.VisibleApps != nil {
		toSerialize["visibleApps"] = o.VisibleApps
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *UserInvitationRelationships) UnmarshalJSON(bytes []byte) (err error) {
	varUserInvitationRelationships := _UserInvitationRelationships{}

	if err = json.Unmarshal(bytes, &varUserInvitationRelationships); err == nil {
		*o = UserInvitationRelationships(varUserInvitationRelationships)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "visibleApps")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUserInvitationRelationships struct {
	value *UserInvitationRelationships
	isSet bool
}

func (v NullableUserInvitationRelationships) Get() *UserInvitationRelationships {
	return v.value
}

func (v *NullableUserInvitationRelationships) Set(val *UserInvitationRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableUserInvitationRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableUserInvitationRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserInvitationRelationships(val *UserInvitationRelationships) *NullableUserInvitationRelationships {
	return &NullableUserInvitationRelationships{value: val, isSet: true}
}

func (v NullableUserInvitationRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserInvitationRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


