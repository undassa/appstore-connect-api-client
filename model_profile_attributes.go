/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect

import (
	"encoding/json"
	"time"
)

// ProfileAttributes struct for ProfileAttributes
type ProfileAttributes struct {
	Name *string `json:"name,omitempty"`
	Platform *BundleIdPlatform `json:"platform,omitempty"`
	ProfileType *string `json:"profileType,omitempty"`
	ProfileState *string `json:"profileState,omitempty"`
	ProfileContent *string `json:"profileContent,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
	CreatedDate *time.Time `json:"createdDate,omitempty"`
	ExpirationDate *time.Time `json:"expirationDate,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ProfileAttributes ProfileAttributes

// NewProfileAttributes instantiates a new ProfileAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileAttributes() *ProfileAttributes {
	this := ProfileAttributes{}
	return &this
}

// NewProfileAttributesWithDefaults instantiates a new ProfileAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileAttributesWithDefaults() *ProfileAttributes {
	this := ProfileAttributes{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProfileAttributes) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileAttributes) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProfileAttributes) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProfileAttributes) SetName(v string) {
	o.Name = &v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *ProfileAttributes) GetPlatform() BundleIdPlatform {
	if o == nil || o.Platform == nil {
		var ret BundleIdPlatform
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileAttributes) GetPlatformOk() (*BundleIdPlatform, bool) {
	if o == nil || o.Platform == nil {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *ProfileAttributes) HasPlatform() bool {
	if o != nil && o.Platform != nil {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given BundleIdPlatform and assigns it to the Platform field.
func (o *ProfileAttributes) SetPlatform(v BundleIdPlatform) {
	o.Platform = &v
}

// GetProfileType returns the ProfileType field value if set, zero value otherwise.
func (o *ProfileAttributes) GetProfileType() string {
	if o == nil || o.ProfileType == nil {
		var ret string
		return ret
	}
	return *o.ProfileType
}

// GetProfileTypeOk returns a tuple with the ProfileType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileAttributes) GetProfileTypeOk() (*string, bool) {
	if o == nil || o.ProfileType == nil {
		return nil, false
	}
	return o.ProfileType, true
}

// HasProfileType returns a boolean if a field has been set.
func (o *ProfileAttributes) HasProfileType() bool {
	if o != nil && o.ProfileType != nil {
		return true
	}

	return false
}

// SetProfileType gets a reference to the given string and assigns it to the ProfileType field.
func (o *ProfileAttributes) SetProfileType(v string) {
	o.ProfileType = &v
}

// GetProfileState returns the ProfileState field value if set, zero value otherwise.
func (o *ProfileAttributes) GetProfileState() string {
	if o == nil || o.ProfileState == nil {
		var ret string
		return ret
	}
	return *o.ProfileState
}

// GetProfileStateOk returns a tuple with the ProfileState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileAttributes) GetProfileStateOk() (*string, bool) {
	if o == nil || o.ProfileState == nil {
		return nil, false
	}
	return o.ProfileState, true
}

// HasProfileState returns a boolean if a field has been set.
func (o *ProfileAttributes) HasProfileState() bool {
	if o != nil && o.ProfileState != nil {
		return true
	}

	return false
}

// SetProfileState gets a reference to the given string and assigns it to the ProfileState field.
func (o *ProfileAttributes) SetProfileState(v string) {
	o.ProfileState = &v
}

// GetProfileContent returns the ProfileContent field value if set, zero value otherwise.
func (o *ProfileAttributes) GetProfileContent() string {
	if o == nil || o.ProfileContent == nil {
		var ret string
		return ret
	}
	return *o.ProfileContent
}

// GetProfileContentOk returns a tuple with the ProfileContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileAttributes) GetProfileContentOk() (*string, bool) {
	if o == nil || o.ProfileContent == nil {
		return nil, false
	}
	return o.ProfileContent, true
}

// HasProfileContent returns a boolean if a field has been set.
func (o *ProfileAttributes) HasProfileContent() bool {
	if o != nil && o.ProfileContent != nil {
		return true
	}

	return false
}

// SetProfileContent gets a reference to the given string and assigns it to the ProfileContent field.
func (o *ProfileAttributes) SetProfileContent(v string) {
	o.ProfileContent = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *ProfileAttributes) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileAttributes) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *ProfileAttributes) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *ProfileAttributes) SetUuid(v string) {
	o.Uuid = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *ProfileAttributes) GetCreatedDate() time.Time {
	if o == nil || o.CreatedDate == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileAttributes) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil || o.CreatedDate == nil {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *ProfileAttributes) HasCreatedDate() bool {
	if o != nil && o.CreatedDate != nil {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given time.Time and assigns it to the CreatedDate field.
func (o *ProfileAttributes) SetCreatedDate(v time.Time) {
	o.CreatedDate = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *ProfileAttributes) GetExpirationDate() time.Time {
	if o == nil || o.ExpirationDate == nil {
		var ret time.Time
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileAttributes) GetExpirationDateOk() (*time.Time, bool) {
	if o == nil || o.ExpirationDate == nil {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *ProfileAttributes) HasExpirationDate() bool {
	if o != nil && o.ExpirationDate != nil {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given time.Time and assigns it to the ExpirationDate field.
func (o *ProfileAttributes) SetExpirationDate(v time.Time) {
	o.ExpirationDate = &v
}

func (o ProfileAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Platform != nil {
		toSerialize["platform"] = o.Platform
	}
	if o.ProfileType != nil {
		toSerialize["profileType"] = o.ProfileType
	}
	if o.ProfileState != nil {
		toSerialize["profileState"] = o.ProfileState
	}
	if o.ProfileContent != nil {
		toSerialize["profileContent"] = o.ProfileContent
	}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	if o.CreatedDate != nil {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if o.ExpirationDate != nil {
		toSerialize["expirationDate"] = o.ExpirationDate
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ProfileAttributes) UnmarshalJSON(bytes []byte) (err error) {
	varProfileAttributes := _ProfileAttributes{}

	if err = json.Unmarshal(bytes, &varProfileAttributes); err == nil {
		*o = ProfileAttributes(varProfileAttributes)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "platform")
		delete(additionalProperties, "profileType")
		delete(additionalProperties, "profileState")
		delete(additionalProperties, "profileContent")
		delete(additionalProperties, "uuid")
		delete(additionalProperties, "createdDate")
		delete(additionalProperties, "expirationDate")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProfileAttributes struct {
	value *ProfileAttributes
	isSet bool
}

func (v NullableProfileAttributes) Get() *ProfileAttributes {
	return v.value
}

func (v *NullableProfileAttributes) Set(val *ProfileAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileAttributes(val *ProfileAttributes) *NullableProfileAttributes {
	return &NullableProfileAttributes{value: val, isSet: true}
}

func (v NullableProfileAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


