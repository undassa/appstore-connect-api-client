/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect

import (
	"encoding/json"
)

// PagedDocumentLinks struct for PagedDocumentLinks
type PagedDocumentLinks struct {
	Self string `json:"self"`
	First *string `json:"first,omitempty"`
	Next *string `json:"next,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PagedDocumentLinks PagedDocumentLinks

// NewPagedDocumentLinks instantiates a new PagedDocumentLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPagedDocumentLinks(self string, ) *PagedDocumentLinks {
	this := PagedDocumentLinks{}
	this.Self = self
	return &this
}

// NewPagedDocumentLinksWithDefaults instantiates a new PagedDocumentLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPagedDocumentLinksWithDefaults() *PagedDocumentLinks {
	this := PagedDocumentLinks{}
	return &this
}

// GetSelf returns the Self field value
func (o *PagedDocumentLinks) GetSelf() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Self
}

// GetSelfOk returns a tuple with the Self field value
// and a boolean to check if the value has been set.
func (o *PagedDocumentLinks) GetSelfOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Self, true
}

// SetSelf sets field value
func (o *PagedDocumentLinks) SetSelf(v string) {
	o.Self = v
}

// GetFirst returns the First field value if set, zero value otherwise.
func (o *PagedDocumentLinks) GetFirst() string {
	if o == nil || o.First == nil {
		var ret string
		return ret
	}
	return *o.First
}

// GetFirstOk returns a tuple with the First field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PagedDocumentLinks) GetFirstOk() (*string, bool) {
	if o == nil || o.First == nil {
		return nil, false
	}
	return o.First, true
}

// HasFirst returns a boolean if a field has been set.
func (o *PagedDocumentLinks) HasFirst() bool {
	if o != nil && o.First != nil {
		return true
	}

	return false
}

// SetFirst gets a reference to the given string and assigns it to the First field.
func (o *PagedDocumentLinks) SetFirst(v string) {
	o.First = &v
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *PagedDocumentLinks) GetNext() string {
	if o == nil || o.Next == nil {
		var ret string
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PagedDocumentLinks) GetNextOk() (*string, bool) {
	if o == nil || o.Next == nil {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *PagedDocumentLinks) HasNext() bool {
	if o != nil && o.Next != nil {
		return true
	}

	return false
}

// SetNext gets a reference to the given string and assigns it to the Next field.
func (o *PagedDocumentLinks) SetNext(v string) {
	o.Next = &v
}

func (o PagedDocumentLinks) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["self"] = o.Self
	}
	if o.First != nil {
		toSerialize["first"] = o.First
	}
	if o.Next != nil {
		toSerialize["next"] = o.Next
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *PagedDocumentLinks) UnmarshalJSON(bytes []byte) (err error) {
	varPagedDocumentLinks := _PagedDocumentLinks{}

	if err = json.Unmarshal(bytes, &varPagedDocumentLinks); err == nil {
		*o = PagedDocumentLinks(varPagedDocumentLinks)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "self")
		delete(additionalProperties, "first")
		delete(additionalProperties, "next")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePagedDocumentLinks struct {
	value *PagedDocumentLinks
	isSet bool
}

func (v NullablePagedDocumentLinks) Get() *PagedDocumentLinks {
	return v.value
}

func (v *NullablePagedDocumentLinks) Set(val *PagedDocumentLinks) {
	v.value = val
	v.isSet = true
}

func (v NullablePagedDocumentLinks) IsSet() bool {
	return v.isSet
}

func (v *NullablePagedDocumentLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePagedDocumentLinks(val *PagedDocumentLinks) *NullablePagedDocumentLinks {
	return &NullablePagedDocumentLinks{value: val, isSet: true}
}

func (v NullablePagedDocumentLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePagedDocumentLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


