/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect

import (
	"encoding/json"
)

// BetaGroupCreateRequestDataRelationshipsBetaTesters struct for BetaGroupCreateRequestDataRelationshipsBetaTesters
type BetaGroupCreateRequestDataRelationshipsBetaTesters struct {
	Data *[]BetaGroupRelationshipsBetaTestersData `json:"data,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BetaGroupCreateRequestDataRelationshipsBetaTesters BetaGroupCreateRequestDataRelationshipsBetaTesters

// NewBetaGroupCreateRequestDataRelationshipsBetaTesters instantiates a new BetaGroupCreateRequestDataRelationshipsBetaTesters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBetaGroupCreateRequestDataRelationshipsBetaTesters() *BetaGroupCreateRequestDataRelationshipsBetaTesters {
	this := BetaGroupCreateRequestDataRelationshipsBetaTesters{}
	return &this
}

// NewBetaGroupCreateRequestDataRelationshipsBetaTestersWithDefaults instantiates a new BetaGroupCreateRequestDataRelationshipsBetaTesters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBetaGroupCreateRequestDataRelationshipsBetaTestersWithDefaults() *BetaGroupCreateRequestDataRelationshipsBetaTesters {
	this := BetaGroupCreateRequestDataRelationshipsBetaTesters{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *BetaGroupCreateRequestDataRelationshipsBetaTesters) GetData() []BetaGroupRelationshipsBetaTestersData {
	if o == nil || o.Data == nil {
		var ret []BetaGroupRelationshipsBetaTestersData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BetaGroupCreateRequestDataRelationshipsBetaTesters) GetDataOk() (*[]BetaGroupRelationshipsBetaTestersData, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *BetaGroupCreateRequestDataRelationshipsBetaTesters) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given []BetaGroupRelationshipsBetaTestersData and assigns it to the Data field.
func (o *BetaGroupCreateRequestDataRelationshipsBetaTesters) SetData(v []BetaGroupRelationshipsBetaTestersData) {
	o.Data = &v
}

func (o BetaGroupCreateRequestDataRelationshipsBetaTesters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *BetaGroupCreateRequestDataRelationshipsBetaTesters) UnmarshalJSON(bytes []byte) (err error) {
	varBetaGroupCreateRequestDataRelationshipsBetaTesters := _BetaGroupCreateRequestDataRelationshipsBetaTesters{}

	if err = json.Unmarshal(bytes, &varBetaGroupCreateRequestDataRelationshipsBetaTesters); err == nil {
		*o = BetaGroupCreateRequestDataRelationshipsBetaTesters(varBetaGroupCreateRequestDataRelationshipsBetaTesters)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "data")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBetaGroupCreateRequestDataRelationshipsBetaTesters struct {
	value *BetaGroupCreateRequestDataRelationshipsBetaTesters
	isSet bool
}

func (v NullableBetaGroupCreateRequestDataRelationshipsBetaTesters) Get() *BetaGroupCreateRequestDataRelationshipsBetaTesters {
	return v.value
}

func (v *NullableBetaGroupCreateRequestDataRelationshipsBetaTesters) Set(val *BetaGroupCreateRequestDataRelationshipsBetaTesters) {
	v.value = val
	v.isSet = true
}

func (v NullableBetaGroupCreateRequestDataRelationshipsBetaTesters) IsSet() bool {
	return v.isSet
}

func (v *NullableBetaGroupCreateRequestDataRelationshipsBetaTesters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBetaGroupCreateRequestDataRelationshipsBetaTesters(val *BetaGroupCreateRequestDataRelationshipsBetaTesters) *NullableBetaGroupCreateRequestDataRelationshipsBetaTesters {
	return &NullableBetaGroupCreateRequestDataRelationshipsBetaTesters{value: val, isSet: true}
}

func (v NullableBetaGroupCreateRequestDataRelationshipsBetaTesters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBetaGroupCreateRequestDataRelationshipsBetaTesters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


