/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect

import (
	"encoding/json"
)

// AppStoreVersionLocalizationRelationships struct for AppStoreVersionLocalizationRelationships
type AppStoreVersionLocalizationRelationships struct {
	AppStoreVersion *AppStoreReviewDetailRelationshipsAppStoreVersion `json:"appStoreVersion,omitempty"`
	AppScreenshotSets *AppStoreVersionLocalizationRelationshipsAppScreenshotSets `json:"appScreenshotSets,omitempty"`
	AppPreviewSets *AppStoreVersionLocalizationRelationshipsAppPreviewSets `json:"appPreviewSets,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AppStoreVersionLocalizationRelationships AppStoreVersionLocalizationRelationships

// NewAppStoreVersionLocalizationRelationships instantiates a new AppStoreVersionLocalizationRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppStoreVersionLocalizationRelationships() *AppStoreVersionLocalizationRelationships {
	this := AppStoreVersionLocalizationRelationships{}
	return &this
}

// NewAppStoreVersionLocalizationRelationshipsWithDefaults instantiates a new AppStoreVersionLocalizationRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppStoreVersionLocalizationRelationshipsWithDefaults() *AppStoreVersionLocalizationRelationships {
	this := AppStoreVersionLocalizationRelationships{}
	return &this
}

// GetAppStoreVersion returns the AppStoreVersion field value if set, zero value otherwise.
func (o *AppStoreVersionLocalizationRelationships) GetAppStoreVersion() AppStoreReviewDetailRelationshipsAppStoreVersion {
	if o == nil || o.AppStoreVersion == nil {
		var ret AppStoreReviewDetailRelationshipsAppStoreVersion
		return ret
	}
	return *o.AppStoreVersion
}

// GetAppStoreVersionOk returns a tuple with the AppStoreVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStoreVersionLocalizationRelationships) GetAppStoreVersionOk() (*AppStoreReviewDetailRelationshipsAppStoreVersion, bool) {
	if o == nil || o.AppStoreVersion == nil {
		return nil, false
	}
	return o.AppStoreVersion, true
}

// HasAppStoreVersion returns a boolean if a field has been set.
func (o *AppStoreVersionLocalizationRelationships) HasAppStoreVersion() bool {
	if o != nil && o.AppStoreVersion != nil {
		return true
	}

	return false
}

// SetAppStoreVersion gets a reference to the given AppStoreReviewDetailRelationshipsAppStoreVersion and assigns it to the AppStoreVersion field.
func (o *AppStoreVersionLocalizationRelationships) SetAppStoreVersion(v AppStoreReviewDetailRelationshipsAppStoreVersion) {
	o.AppStoreVersion = &v
}

// GetAppScreenshotSets returns the AppScreenshotSets field value if set, zero value otherwise.
func (o *AppStoreVersionLocalizationRelationships) GetAppScreenshotSets() AppStoreVersionLocalizationRelationshipsAppScreenshotSets {
	if o == nil || o.AppScreenshotSets == nil {
		var ret AppStoreVersionLocalizationRelationshipsAppScreenshotSets
		return ret
	}
	return *o.AppScreenshotSets
}

// GetAppScreenshotSetsOk returns a tuple with the AppScreenshotSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStoreVersionLocalizationRelationships) GetAppScreenshotSetsOk() (*AppStoreVersionLocalizationRelationshipsAppScreenshotSets, bool) {
	if o == nil || o.AppScreenshotSets == nil {
		return nil, false
	}
	return o.AppScreenshotSets, true
}

// HasAppScreenshotSets returns a boolean if a field has been set.
func (o *AppStoreVersionLocalizationRelationships) HasAppScreenshotSets() bool {
	if o != nil && o.AppScreenshotSets != nil {
		return true
	}

	return false
}

// SetAppScreenshotSets gets a reference to the given AppStoreVersionLocalizationRelationshipsAppScreenshotSets and assigns it to the AppScreenshotSets field.
func (o *AppStoreVersionLocalizationRelationships) SetAppScreenshotSets(v AppStoreVersionLocalizationRelationshipsAppScreenshotSets) {
	o.AppScreenshotSets = &v
}

// GetAppPreviewSets returns the AppPreviewSets field value if set, zero value otherwise.
func (o *AppStoreVersionLocalizationRelationships) GetAppPreviewSets() AppStoreVersionLocalizationRelationshipsAppPreviewSets {
	if o == nil || o.AppPreviewSets == nil {
		var ret AppStoreVersionLocalizationRelationshipsAppPreviewSets
		return ret
	}
	return *o.AppPreviewSets
}

// GetAppPreviewSetsOk returns a tuple with the AppPreviewSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStoreVersionLocalizationRelationships) GetAppPreviewSetsOk() (*AppStoreVersionLocalizationRelationshipsAppPreviewSets, bool) {
	if o == nil || o.AppPreviewSets == nil {
		return nil, false
	}
	return o.AppPreviewSets, true
}

// HasAppPreviewSets returns a boolean if a field has been set.
func (o *AppStoreVersionLocalizationRelationships) HasAppPreviewSets() bool {
	if o != nil && o.AppPreviewSets != nil {
		return true
	}

	return false
}

// SetAppPreviewSets gets a reference to the given AppStoreVersionLocalizationRelationshipsAppPreviewSets and assigns it to the AppPreviewSets field.
func (o *AppStoreVersionLocalizationRelationships) SetAppPreviewSets(v AppStoreVersionLocalizationRelationshipsAppPreviewSets) {
	o.AppPreviewSets = &v
}

func (o AppStoreVersionLocalizationRelationships) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AppStoreVersion != nil {
		toSerialize["appStoreVersion"] = o.AppStoreVersion
	}
	if o.AppScreenshotSets != nil {
		toSerialize["appScreenshotSets"] = o.AppScreenshotSets
	}
	if o.AppPreviewSets != nil {
		toSerialize["appPreviewSets"] = o.AppPreviewSets
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *AppStoreVersionLocalizationRelationships) UnmarshalJSON(bytes []byte) (err error) {
	varAppStoreVersionLocalizationRelationships := _AppStoreVersionLocalizationRelationships{}

	if err = json.Unmarshal(bytes, &varAppStoreVersionLocalizationRelationships); err == nil {
		*o = AppStoreVersionLocalizationRelationships(varAppStoreVersionLocalizationRelationships)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "appStoreVersion")
		delete(additionalProperties, "appScreenshotSets")
		delete(additionalProperties, "appPreviewSets")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAppStoreVersionLocalizationRelationships struct {
	value *AppStoreVersionLocalizationRelationships
	isSet bool
}

func (v NullableAppStoreVersionLocalizationRelationships) Get() *AppStoreVersionLocalizationRelationships {
	return v.value
}

func (v *NullableAppStoreVersionLocalizationRelationships) Set(val *AppStoreVersionLocalizationRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableAppStoreVersionLocalizationRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableAppStoreVersionLocalizationRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppStoreVersionLocalizationRelationships(val *AppStoreVersionLocalizationRelationships) *NullableAppStoreVersionLocalizationRelationships {
	return &NullableAppStoreVersionLocalizationRelationships{value: val, isSet: true}
}

func (v NullableAppStoreVersionLocalizationRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppStoreVersionLocalizationRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


