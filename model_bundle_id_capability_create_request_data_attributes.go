/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect

import (
	"encoding/json"
)

// BundleIdCapabilityCreateRequestDataAttributes struct for BundleIdCapabilityCreateRequestDataAttributes
type BundleIdCapabilityCreateRequestDataAttributes struct {
	CapabilityType CapabilityType `json:"capabilityType"`
	Settings *[]CapabilitySetting `json:"settings,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BundleIdCapabilityCreateRequestDataAttributes BundleIdCapabilityCreateRequestDataAttributes

// NewBundleIdCapabilityCreateRequestDataAttributes instantiates a new BundleIdCapabilityCreateRequestDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBundleIdCapabilityCreateRequestDataAttributes(capabilityType CapabilityType, ) *BundleIdCapabilityCreateRequestDataAttributes {
	this := BundleIdCapabilityCreateRequestDataAttributes{}
	this.CapabilityType = capabilityType
	return &this
}

// NewBundleIdCapabilityCreateRequestDataAttributesWithDefaults instantiates a new BundleIdCapabilityCreateRequestDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBundleIdCapabilityCreateRequestDataAttributesWithDefaults() *BundleIdCapabilityCreateRequestDataAttributes {
	this := BundleIdCapabilityCreateRequestDataAttributes{}
	return &this
}

// GetCapabilityType returns the CapabilityType field value
func (o *BundleIdCapabilityCreateRequestDataAttributes) GetCapabilityType() CapabilityType {
	if o == nil  {
		var ret CapabilityType
		return ret
	}

	return o.CapabilityType
}

// GetCapabilityTypeOk returns a tuple with the CapabilityType field value
// and a boolean to check if the value has been set.
func (o *BundleIdCapabilityCreateRequestDataAttributes) GetCapabilityTypeOk() (*CapabilityType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CapabilityType, true
}

// SetCapabilityType sets field value
func (o *BundleIdCapabilityCreateRequestDataAttributes) SetCapabilityType(v CapabilityType) {
	o.CapabilityType = v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *BundleIdCapabilityCreateRequestDataAttributes) GetSettings() []CapabilitySetting {
	if o == nil || o.Settings == nil {
		var ret []CapabilitySetting
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleIdCapabilityCreateRequestDataAttributes) GetSettingsOk() (*[]CapabilitySetting, bool) {
	if o == nil || o.Settings == nil {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *BundleIdCapabilityCreateRequestDataAttributes) HasSettings() bool {
	if o != nil && o.Settings != nil {
		return true
	}

	return false
}

// SetSettings gets a reference to the given []CapabilitySetting and assigns it to the Settings field.
func (o *BundleIdCapabilityCreateRequestDataAttributes) SetSettings(v []CapabilitySetting) {
	o.Settings = &v
}

func (o BundleIdCapabilityCreateRequestDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["capabilityType"] = o.CapabilityType
	}
	if o.Settings != nil {
		toSerialize["settings"] = o.Settings
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *BundleIdCapabilityCreateRequestDataAttributes) UnmarshalJSON(bytes []byte) (err error) {
	varBundleIdCapabilityCreateRequestDataAttributes := _BundleIdCapabilityCreateRequestDataAttributes{}

	if err = json.Unmarshal(bytes, &varBundleIdCapabilityCreateRequestDataAttributes); err == nil {
		*o = BundleIdCapabilityCreateRequestDataAttributes(varBundleIdCapabilityCreateRequestDataAttributes)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "capabilityType")
		delete(additionalProperties, "settings")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBundleIdCapabilityCreateRequestDataAttributes struct {
	value *BundleIdCapabilityCreateRequestDataAttributes
	isSet bool
}

func (v NullableBundleIdCapabilityCreateRequestDataAttributes) Get() *BundleIdCapabilityCreateRequestDataAttributes {
	return v.value
}

func (v *NullableBundleIdCapabilityCreateRequestDataAttributes) Set(val *BundleIdCapabilityCreateRequestDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableBundleIdCapabilityCreateRequestDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableBundleIdCapabilityCreateRequestDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBundleIdCapabilityCreateRequestDataAttributes(val *BundleIdCapabilityCreateRequestDataAttributes) *NullableBundleIdCapabilityCreateRequestDataAttributes {
	return &NullableBundleIdCapabilityCreateRequestDataAttributes{value: val, isSet: true}
}

func (v NullableBundleIdCapabilityCreateRequestDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBundleIdCapabilityCreateRequestDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


