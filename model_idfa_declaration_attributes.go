/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect

import (
	"encoding/json"
)

// IdfaDeclarationAttributes struct for IdfaDeclarationAttributes
type IdfaDeclarationAttributes struct {
	ServesAds *bool `json:"servesAds,omitempty"`
	AttributesAppInstallationToPreviousAd *bool `json:"attributesAppInstallationToPreviousAd,omitempty"`
	AttributesActionWithPreviousAd *bool `json:"attributesActionWithPreviousAd,omitempty"`
	HonorsLimitedAdTracking *bool `json:"honorsLimitedAdTracking,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _IdfaDeclarationAttributes IdfaDeclarationAttributes

// NewIdfaDeclarationAttributes instantiates a new IdfaDeclarationAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdfaDeclarationAttributes() *IdfaDeclarationAttributes {
	this := IdfaDeclarationAttributes{}
	return &this
}

// NewIdfaDeclarationAttributesWithDefaults instantiates a new IdfaDeclarationAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdfaDeclarationAttributesWithDefaults() *IdfaDeclarationAttributes {
	this := IdfaDeclarationAttributes{}
	return &this
}

// GetServesAds returns the ServesAds field value if set, zero value otherwise.
func (o *IdfaDeclarationAttributes) GetServesAds() bool {
	if o == nil || o.ServesAds == nil {
		var ret bool
		return ret
	}
	return *o.ServesAds
}

// GetServesAdsOk returns a tuple with the ServesAds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdfaDeclarationAttributes) GetServesAdsOk() (*bool, bool) {
	if o == nil || o.ServesAds == nil {
		return nil, false
	}
	return o.ServesAds, true
}

// HasServesAds returns a boolean if a field has been set.
func (o *IdfaDeclarationAttributes) HasServesAds() bool {
	if o != nil && o.ServesAds != nil {
		return true
	}

	return false
}

// SetServesAds gets a reference to the given bool and assigns it to the ServesAds field.
func (o *IdfaDeclarationAttributes) SetServesAds(v bool) {
	o.ServesAds = &v
}

// GetAttributesAppInstallationToPreviousAd returns the AttributesAppInstallationToPreviousAd field value if set, zero value otherwise.
func (o *IdfaDeclarationAttributes) GetAttributesAppInstallationToPreviousAd() bool {
	if o == nil || o.AttributesAppInstallationToPreviousAd == nil {
		var ret bool
		return ret
	}
	return *o.AttributesAppInstallationToPreviousAd
}

// GetAttributesAppInstallationToPreviousAdOk returns a tuple with the AttributesAppInstallationToPreviousAd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdfaDeclarationAttributes) GetAttributesAppInstallationToPreviousAdOk() (*bool, bool) {
	if o == nil || o.AttributesAppInstallationToPreviousAd == nil {
		return nil, false
	}
	return o.AttributesAppInstallationToPreviousAd, true
}

// HasAttributesAppInstallationToPreviousAd returns a boolean if a field has been set.
func (o *IdfaDeclarationAttributes) HasAttributesAppInstallationToPreviousAd() bool {
	if o != nil && o.AttributesAppInstallationToPreviousAd != nil {
		return true
	}

	return false
}

// SetAttributesAppInstallationToPreviousAd gets a reference to the given bool and assigns it to the AttributesAppInstallationToPreviousAd field.
func (o *IdfaDeclarationAttributes) SetAttributesAppInstallationToPreviousAd(v bool) {
	o.AttributesAppInstallationToPreviousAd = &v
}

// GetAttributesActionWithPreviousAd returns the AttributesActionWithPreviousAd field value if set, zero value otherwise.
func (o *IdfaDeclarationAttributes) GetAttributesActionWithPreviousAd() bool {
	if o == nil || o.AttributesActionWithPreviousAd == nil {
		var ret bool
		return ret
	}
	return *o.AttributesActionWithPreviousAd
}

// GetAttributesActionWithPreviousAdOk returns a tuple with the AttributesActionWithPreviousAd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdfaDeclarationAttributes) GetAttributesActionWithPreviousAdOk() (*bool, bool) {
	if o == nil || o.AttributesActionWithPreviousAd == nil {
		return nil, false
	}
	return o.AttributesActionWithPreviousAd, true
}

// HasAttributesActionWithPreviousAd returns a boolean if a field has been set.
func (o *IdfaDeclarationAttributes) HasAttributesActionWithPreviousAd() bool {
	if o != nil && o.AttributesActionWithPreviousAd != nil {
		return true
	}

	return false
}

// SetAttributesActionWithPreviousAd gets a reference to the given bool and assigns it to the AttributesActionWithPreviousAd field.
func (o *IdfaDeclarationAttributes) SetAttributesActionWithPreviousAd(v bool) {
	o.AttributesActionWithPreviousAd = &v
}

// GetHonorsLimitedAdTracking returns the HonorsLimitedAdTracking field value if set, zero value otherwise.
func (o *IdfaDeclarationAttributes) GetHonorsLimitedAdTracking() bool {
	if o == nil || o.HonorsLimitedAdTracking == nil {
		var ret bool
		return ret
	}
	return *o.HonorsLimitedAdTracking
}

// GetHonorsLimitedAdTrackingOk returns a tuple with the HonorsLimitedAdTracking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdfaDeclarationAttributes) GetHonorsLimitedAdTrackingOk() (*bool, bool) {
	if o == nil || o.HonorsLimitedAdTracking == nil {
		return nil, false
	}
	return o.HonorsLimitedAdTracking, true
}

// HasHonorsLimitedAdTracking returns a boolean if a field has been set.
func (o *IdfaDeclarationAttributes) HasHonorsLimitedAdTracking() bool {
	if o != nil && o.HonorsLimitedAdTracking != nil {
		return true
	}

	return false
}

// SetHonorsLimitedAdTracking gets a reference to the given bool and assigns it to the HonorsLimitedAdTracking field.
func (o *IdfaDeclarationAttributes) SetHonorsLimitedAdTracking(v bool) {
	o.HonorsLimitedAdTracking = &v
}

func (o IdfaDeclarationAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ServesAds != nil {
		toSerialize["servesAds"] = o.ServesAds
	}
	if o.AttributesAppInstallationToPreviousAd != nil {
		toSerialize["attributesAppInstallationToPreviousAd"] = o.AttributesAppInstallationToPreviousAd
	}
	if o.AttributesActionWithPreviousAd != nil {
		toSerialize["attributesActionWithPreviousAd"] = o.AttributesActionWithPreviousAd
	}
	if o.HonorsLimitedAdTracking != nil {
		toSerialize["honorsLimitedAdTracking"] = o.HonorsLimitedAdTracking
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *IdfaDeclarationAttributes) UnmarshalJSON(bytes []byte) (err error) {
	varIdfaDeclarationAttributes := _IdfaDeclarationAttributes{}

	if err = json.Unmarshal(bytes, &varIdfaDeclarationAttributes); err == nil {
		*o = IdfaDeclarationAttributes(varIdfaDeclarationAttributes)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "servesAds")
		delete(additionalProperties, "attributesAppInstallationToPreviousAd")
		delete(additionalProperties, "attributesActionWithPreviousAd")
		delete(additionalProperties, "honorsLimitedAdTracking")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIdfaDeclarationAttributes struct {
	value *IdfaDeclarationAttributes
	isSet bool
}

func (v NullableIdfaDeclarationAttributes) Get() *IdfaDeclarationAttributes {
	return v.value
}

func (v *NullableIdfaDeclarationAttributes) Set(val *IdfaDeclarationAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableIdfaDeclarationAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableIdfaDeclarationAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdfaDeclarationAttributes(val *IdfaDeclarationAttributes) *NullableIdfaDeclarationAttributes {
	return &NullableIdfaDeclarationAttributes{value: val, isSet: true}
}

func (v NullableIdfaDeclarationAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdfaDeclarationAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


